{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/\\u1103\\u1162\\u1109\\u1161\\u1100\\u1173\\u11A8\\u110C\\u1161\\u11BC REACT_231212/231212-min/src/routes/Detail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Detail = ({\n  movies\n}) => {\n  _s();\n  const [movie, setMovie] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    // movies 배열에서 id에 해당하는 영화를 찾아온다.\n    const selectedMovie = movies.find(m => m.id === id);\n\n    // 찾은 영화 정보를 상태에 설정한다.\n    setMovie(selectedMovie);\n  }, [id, movies]);\n\n  // 영화 정보가 로딩 중이거나 없는 경우에 대한 처리\n  if (!movie) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: movie.year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Detail, \"g8iu1ZIGRaf/NCTTZ2aKV+/5tDw=\", false, function () {\n  return [useParams];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Detail","movies","_s","movie","setMovie","id","selectedMovie","find","m","children","fileName","_jsxFileName","lineNumber","columnNumber","title","year","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/대사극장 REACT_231212/231212-min/src/routes/Detail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst Detail = ({ movies }) => {\n  const [movie, setMovie] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    // movies 배열에서 id에 해당하는 영화를 찾아온다.\n    const selectedMovie = movies.find((m) => m.id === id);\n\n    // 찾은 영화 정보를 상태에 설정한다.\n    setMovie(selectedMovie);\n  }, [id, movies]);\n\n  // 영화 정보가 로딩 중이거나 없는 경우에 대한 처리\n  if (!movie) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <div>\n      {/* 여기에 영화 정보를 렌더링하는 코드를 작성한다. */}\n      <h1>{movie.title}</h1>\n      <p>{movie.year}</p>\n      {/* 나머지 영화 정보를 여기에 추가한다. */}\n    </div>\n  );\n};\n\nexport default Detail;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAAEU;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC;EAE1BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,aAAa,GAAGL,MAAM,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAC;;IAErD;IACAD,QAAQ,CAACE,aAAa,CAAC;EACzB,CAAC,EAAE,CAACD,EAAE,EAAEJ,MAAM,CAAC,CAAC;;EAEhB;EACA,IAAI,CAACE,KAAK,EAAE;IACV,oBAAOJ,OAAA;MAAAU,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAEA,oBACEd,OAAA;IAAAU,QAAA,gBAEEV,OAAA;MAAAU,QAAA,EAAKN,KAAK,CAACW;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBd,OAAA;MAAAU,QAAA,EAAIN,KAAK,CAACY;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhB,CAAC;AAEV,CAAC;AAACX,EAAA,CAzBIF,MAAM;EAAA,QAEKH,SAAS;AAAA;AAAAmB,EAAA,GAFpBhB,MAAM;AA2BZ,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}