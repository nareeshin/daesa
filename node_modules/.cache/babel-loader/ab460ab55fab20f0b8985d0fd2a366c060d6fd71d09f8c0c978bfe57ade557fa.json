{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/\\u1103\\u1162\\u1109\\u1161\\u1100\\u1173\\u11A8\\u110C\\u1161\\u11BC REACT_231212/231212-min/src/components/MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = ({\n  movies,\n  textSize\n}) => {\n  _s();\n  const [trCount, setTrCount] = useState(0);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  useEffect(() => {\n    calculateTrCount();\n  }, [movies]);\n  const calculateTrCount = () => {\n    const tbodyTable = document.querySelector(\".TBodyTable\");\n    if (tbodyTable) {\n      const trCount = tbodyTable.querySelectorAll(\"tr\").length;\n      setTrCount(trCount);\n    }\n  };\n  const handleRowClick = movie => {\n    setSelectedMovie(movie);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TableContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"TBodyTable\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"ListContainer\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: `/movies/${movie.id}`,\n              state: {\n                movie\n              }\n            },\n            onClick: () => handleRowClick(movie)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"k25IhNLFl1QBdyx+/63tEaF/sXw=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","useHistory","jsxDEV","_jsxDEV","MovieList","movies","textSize","_s","trCount","setTrCount","selectedMovie","setSelectedMovie","calculateTrCount","tbodyTable","document","querySelector","querySelectorAll","length","handleRowClick","movie","className","children","map","to","pathname","id","state","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/대사극장 REACT_231212/231212-min/src/components/MovieList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\n\nconst MovieList = ({ movies, textSize }) => {\n  const [trCount, setTrCount] = useState(0);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n\n  useEffect(() => {\n    calculateTrCount();\n  }, [movies]);\n\n  const calculateTrCount = () => {\n    const tbodyTable = document.querySelector(\".TBodyTable\");\n\n    if (tbodyTable) {\n      const trCount = tbodyTable.querySelectorAll(\"tr\").length;\n      setTrCount(trCount);\n    }\n  };\n\n  const handleRowClick = (movie) => {\n    setSelectedMovie(movie);\n  };\n\n  return (\n    <div className=\"TableContainer\">\n      {/* ... (your existing code) */}\n      <table className=\"TBodyTable\">\n        <tbody className=\"ListContainer\">\n          {movies.map((movie) => (\n            <tr key={movie.id}>\n              <Link\n                to={{ pathname: `/movies/${movie.id}`, state: { movie } }}\n                onClick={() => handleRowClick(movie)}\n              >\n                {/* ... (your existing code for rendering each row) */}\n              </Link>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {/* ... (your existing code for displaying result count) */}\n    </div>\n  );\n};\n\nexport default MovieList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,SAAS,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAM;IACdc,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAEZ,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,UAAU,GAAGC,QAAQ,CAACC,aAAa,CAAC,aAAa,CAAC;IAExD,IAAIF,UAAU,EAAE;MACd,MAAML,OAAO,GAAGK,UAAU,CAACG,gBAAgB,CAAC,IAAI,CAAC,CAACC,MAAM;MACxDR,UAAU,CAACD,OAAO,CAAC;IACrB;EACF,CAAC;EAED,MAAMU,cAAc,GAAIC,KAAK,IAAK;IAChCR,gBAAgB,CAACQ,KAAK,CAAC;EACzB,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAE7BlB,OAAA;MAAOiB,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC3BlB,OAAA;QAAOiB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC7BhB,MAAM,CAACiB,GAAG,CAAEH,KAAK,iBAChBhB,OAAA;UAAAkB,QAAA,eACElB,OAAA,CAACJ,IAAI;YACHwB,EAAE,EAAE;cAAEC,QAAQ,EAAG,WAAUL,KAAK,CAACM,EAAG,EAAC;cAAEC,KAAK,EAAE;gBAAEP;cAAM;YAAE,CAAE;YAC1DQ,OAAO,EAAEA,CAAA,KAAMT,cAAc,CAACC,KAAK;UAAE;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGjC;QAAC,GANAZ,KAAK,CAACM,EAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOb,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGL,CAAC;AAEV,CAAC;AAACxB,EAAA,CA1CIH,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AA4Cf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}